# This Workflow creates a new branch with code changes required for a version bump (e.g incremenmt app version in manifest files) as well as a PR to merge these changes to the target branch.
# The version bump (=change of semantic version number) is automatically determined from commit history at the source ref which triggered the workflow. 
# Changes are read from conventional commit messages. A release-PR is created only in case "releasable units" have been pushed to git ref.
# The workflow also creates and updates an auto-generated changelog. The format of the changelog is specified at the config_file. Namely, the config file can be used to specify a mepping between conventional commits and changelog sections. Each conventional commit, which will be written to the changelog, is considered to be a releasable unit and, thus, results in a version bump.
#
# The auto-generated Release PR will:
# - increment the application version at `.release-please-manifest.json`
# - increment the application version at framework-specific files (e.g. `package.json`, `pyproject.toml`, `go.mod`,...)
# - update `CHANGELOG.md` and include conventional commit messages
#
# This workflow is NOT configured to create releases (see release.yml) (although release-please is capable of doing with a singe action). This is a design decision aiming to improve readability by allowing to separate the workflows for release-pr creation and for release/build/push
#
# Limitations:
#   * release_semver is set only in case a root package (package path: ".") is specified in release-please config file. This workflow needs to be modified in case release-please should be used to release non-root packages (e.g. in a monorepo)
#   * this workflow uses the default GITHUB_TOKEN for authentication and will not trigger any workflow for resources which are created (e.g. for releases or tags). In case this is required, pass a custom access token which is generated for a GitHub App to the `release` step. See https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/making-authenticated-api-requests-with-a-github-app-in-a-github-actions-workflow
#   * unexpected behaviour might result in case this workflow runs concurrently with ohter workflows which use the release-please action due to race conditions
#
# further reading:
#   * https://github.com/googleapis/release-please
#   * https://github.com/google-github-actions/release-please-action
name: release-pr

on:
  workflow_call:
    inputs:
      target_branch:
        type: string
        description: 'target branch for release pull requests'
        default: main
      config_file:
        type: string
        description: 'path to release-please config file'
        default: release-please-config.json
      manifest_file:
        type: string
        description: 'path to release-please manifest file'
        default: .release-please-manifest.json
      delay:
        type: number
        description: delays workflow execution by the given number of seconds
        default: 30

jobs:
  release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write           # the action creates and pushes a new branch for the changes which are introduced with the PR
      pull-requests: write
    steps:

      # release-please uses the GitHub GraphQL API to check for pending merged pull requests, and to check labels on these PRs.
      # A race condition might occur in case release-please is concurrently used at another workflow (e.g. release.yml) to merge PRs and to create releases. In this case, duplicate release PRs might get created by this action.
      # To avoid race conditions a delay is added to make sure `release` runs first to success before trying to create a release PR.cancel-timeout-minutes.
      # Alternatively, concurrent job execution can be avoided by 
      - name: delay
        run: sleep ${{ inputs.delay }}

      - uses: google-github-actions/release-please-action@v4
        with:  
          token: ${{ secrets.GITHUB_TOKEN }}
          target-branch: ${{ inputs.target_branch }}
          config-file: ${{ inputs.config_file }}
          manifest-file: ${{ inputs.manifest_file }}
          skip-github-release: true     # only create release-PRs and branches
