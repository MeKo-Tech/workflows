# This workflow deploys a released application version to a remote docker host
# The workflow first validates whether the git ref corresponds to a released version and extracts the Semver for the release
# The application is then installed on the remote host by calling the workflow docker-compose-up.yml with the current git ref and the Semver of the release. App configurations are passed from the workflow inputs
# After successfull installation, unused images are pruned from the remote Docker host to free disk space

on:
  workflow_call:
    inputs:
      source_ref:
        type: string
        default: ${{ github.event.ref }}
        description: Source ref to deploy from. This can refer to a commit, branch or tag. Defaults to git ref, which triggered the calling workflow
      image_name:
        type: string
        required: true
        description: Name of the docker image. This value is used to check, whether a docker image for this repo has been pushed to GitHub Packages
      delete_invalid_tags:
        type: boolean
        default: true
        description: Whether to automatically delete source_ref in case it does not refer to a valid release (e.g. STAGING nor refering to a released commit). Only executed in case ref is a git tag
      ssh_host:
        type: string
        required: true
        description: Name of the remote docker host (e.g. ip adress)
      ssh_user:
        type: string
        required: true
        description: Username used to authenticate to remote docker host
      compose_file:
        type: string
        required: true
        description: Path to the docker-compose file which is used to deploy the application. Must be relative to repository root
      compose_project_name:
        type: string
        required: true
        description: Name of the docker compose project
      prune_unused_images:
        type: boolean
        default: true
        description: Whether to automatically prune unused images on the remote docker host
    secrets:
      ssh_private_key:
        required: true
        description: ssh private key used to authenticate to remote docker host
      env_file_data:
        required: true
        description: .env file holding application configuration. Check docker-compose file for available variables.

jobs:
  # validates whether soruce_ref corresponds to a commit witg a valid release
  is_released:
    uses: ./.github/workflows/is_released.yml
    with:
      source_ref: ${{ inputs.source_ref }}
      image_validate: true
      image_name: ${{ inputs.image_name }}

  # delete invalid tags which do not reference a release
  delete_invalid_tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - is_released
    if: ${{ failure() && inputs.delete_invalid_tags && startsWith(inputs.source_ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source_ref }}
      - run: |
          echo "delete ${{ inputs.source_ref }} from remote"
          git push --delete origin ${{ inputs.source_ref }}  

  # deploy application to remote docker host
  docker-compose-up:
    uses: ./.github/workflows/docker-compose-up.yml
    needs: is_released
    with:
      source_ref: ${{ inputs.source_ref }}
      ssh_host: ${{ inputs.ssh_host }}
      ssh_user: ${{ inputs.ssh_user }}
      compose_file: ${{ inputs.compose_file }}
      compose_project_name: ${{ inputs.compose_project_name }}
      image_tag: ${{ needs.is_released.outputs.version_tag }}
    secrets:
      ssh_private_key: ${{ secrets.ssh_private_key }}
      env_file_data: ${{ secrets.env_file_data }}

  # prune unused images from remote docker host
  docker-image-prune:
    if: ${{ inputs.prune_unused_images }}
    uses: ./.github/workflows/docker-image-prune.yml
    needs: docker-compose-up
    with:
      ssh_host: ${{ inputs.ssh_host }}
      ssh_user: ${{ inputs.ssh_user }}
    secrets:
      ssh_private_key: ${{ secrets.ssh_private_key }}